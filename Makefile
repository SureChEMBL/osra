#
# This makefile simply redirects all targets to "src" directory, but also includes
# some specific package-wide rules.
#
# http://mad-scientist.net/make/rules.html

include Makefile.inc

# These targets are used to invoke make recursively but do some additional actions if necessary:
SPECIAL_PHONY_TARGETS	:= $(addsuffix .subdir,$(PHONY_TARGETS))

.PHONY: proper tarball dist distcheck pkgdeb pkgrpm $(SPECIAL_PHONY_TARGETS)

$(SPECIAL_PHONY_TARGETS): %.subdir:
	$(MAKE) -C src $*
	$(MAKE) -C dict $*
	$(MAKE) -C doc $*

all: all.subdir

install: install.subdir
	$(INSTALL_DIR) $(DESTDIR)$(docdir)
	$(INSTALL_DATA) README $(DESTDIR)$(docdir)

uninstall: uninstall.subdir
	$(RM) -f $(DESTDIR)$(docdir)/README
#	We do not uninstall empty directories

# Should remove all Makefile targets:
clean: clean.subdir

# Cleanup all autogenerated files (e.g. used before creating a distro tarball).
distclean: clean distclean.subdir
	$(RM) -f config.status config.cache config.log
	$(RM) -f Makefile Makefile.inc
	$(RM) -rf autom4te.cache

# Various consistency checks of the distro.
distcheck:
#	Check that the directory is named correctly:
	@if [ "$(cur_dir)" != "$(name_version)" ]; then echo 'Check that the package directory is has a name "$(name_version)" (now it is "$(cur_dir)").'; exit 1; fi

# This rule is responsible for correcting permissions after checkout from VCS.
proper:
	chmod 755 configure

# This rule creates a tarball from current directory.
# $(TAR_NAME) should be defined before calling this rule:
tarball: distcheck distclean proper
	tar -C .. -czf $(TAR_NAME) --exclude-vcs $(cur_dir)

# Create a tarball snapshot from current source directory (usually to be uploaded to FTP server).
dist: TAR_NAME := ../$(name_version).tgz

dist: tarball
	cat $(TAR_NAME) | md5sum  > $(TAR_NAME).md5
	@echo "Archive $(TAR_NAME) was created."

# Debian build requires the original tarball name to correspond to mask "NAME_VERSION.(tar|tar.bz2|tar.gz|lzma)":
pkgdeb: TAR_NAME := ../$(name)_$(version).orig.tar.gz
# Create DEB package:
pkgdeb: tarball
	cp -a package/linux/debian .
	-debuild -sa
	$(RM) -rf debian $(TAR_NAME)

# Use default value if TMP variable is not defined:
pkgrpm: TMP_RPM := $(shell pwd)/../rpm_build
# If you change the name here, change also "Source0" in osra.spec:
pkgrpm: TAR_NAME := ../$(name_version).tar.gz
# Create RPM package:
pkgrpm: tarball
	$(RM) -rf $(TMP_RPM)
	
	echo "%_topdir $(TMP_RPM)" > ~/.rpmmacros
	echo "%name $(name)" >> ~/.rpmmacros
	echo "%version $(version)" >> ~/.rpmmacros
	
	mkdir -p $(TMP_RPM)/{SOURCES,SPECS,BUILD,RPMS,SRPMS}
	
	mv $(TAR_NAME) $(TMP_RPM)/SOURCES
	cp package/linux/suse/osra.spec $(TMP_RPM)/SPECS
	-pushd $(TMP_RPM)/SPECS && rpmbuild -ba osra.spec
	
	$(RM) -f ~/.rpmmacros

beautify:
	astyle --style=gnu --suffix=none --recursive "*.cpp" "*.h"

# These rules are disabled to avoid running of "configure" script twice.
Makefile.inc: Makefile.inc.in config.status
	./config.status

config.status: configure
	./configure

configure: configure.ac aclocal.m4
	autoconf

