#
# This makefile simply redirects all targets to "src" directory, but also includes
# some specific package-wide rules.
#
# http://mad-scientist.net/make/rules.html

include Makefile.inc

SHELL=/bin/bash

# These targets are used to invoke make recursively but do some additional actions if necessary:
SPECIAL_PHONY_TARGETS	:= $(addsuffix .subdir,$(PHONY_TARGETS))

.PHONY: proper tarball dist package_deb package_rpm $(SPECIAL_PHONY_TARGETS)

$(SPECIAL_PHONY_TARGETS): %.subdir:
	$(MAKE) -C src $*
	$(MAKE) -C dict $*
	$(MAKE) -C doc $*

all: all.subdir

install: install.subdir
	$(INSTALL_DIR) $(DESTDIR)$(docdir) $(DESTDIR)$(libdir)/pkgconfig
	$(INSTALL_DATA) README $(DESTDIR)$(docdir)
	$(INSTALL_DATA) package/linux/osra.pc $(DESTDIR)$(libdir)/pkgconfig

uninstall: uninstall.subdir
	$(RM) -f $(DESTDIR)$(docdir)/README $(DESTDIR)$(libdir)/pkgconfig/osra.pc
#	We do not uninstall empty directories

# Should remove all Makefile targets:
clean: clean.subdir

# Cleanup all autogenerated files (e.g. used before creating a distro tarball).
distclean: clean distclean.subdir
	$(RM) -rf config.status config.cache config.log autom4te.cache
	$(RM) -f Makefile Makefile.inc
	$(RM) -f $(name)*.*rpm $(name)*.deb $(name)*.tar.gz

# This rule is responsible for correcting permissions after checkout from VCS.
proper:
	chmod 755 configure

# This rule creates a tarball from current directory.
# $(TAR_NAME) should be defined before calling this rule:
tarball: distclean proper
	tar -C .. -czf $(TAR_NAME) --exclude-vcs $(shell basename `pwd`)

# Create a tarball snapshot from current source directory (usually to be uploaded to FTP server).
dist: TAR_NAME := ../$(name_version).tgz
# Generate md5:
dist: tarball
	cat $(TAR_NAME) | md5sum  > $(TAR_NAME).md5
	@echo "Archive $(TAR_NAME) was created."

# Use default value if TMP variable is not defined:
BUILD_DIR := $(shell echo $${TMP:-/tmp})/build/$(name_version)

# Create DEB package:
package_deb:
	mkdir -p $(BUILD_DIR)
	
	cp -a . $(BUILD_DIR)
	cp -a package/linux/debian $(BUILD_DIR)
	
#	Debian build requires the original tarball name to correspond to mask "NAME_VERSION.orig.(tar|tar.bz2|tar.gz|lzma)":	
	TAR_NAME=../$(name)_$(version).orig.tar.gz $(MAKE) -C $(BUILD_DIR) tarball 

	pushd $(BUILD_DIR); \
	debuild -sa -us -uc; \
	exit_code=$$?; \
	popd; \
	exit $$exit_code;
	cp $(BUILD_DIR)/../$(name)*.deb $(BUILD_DIR)/../$(name)*.orig.tar.gz .
	$(RM) -rf $(BUILD_DIR)

# Create RPM package:
package_rpm: 
	mkdir -p $(BUILD_DIR)/{SOURCES,SPECS,BUILD,RPMS,SRPMS,$(name_version)}

	echo "%_topdir $(BUILD_DIR)" > ~/.rpmmacros
	echo "%name $(name)" >> ~/.rpmmacros
	echo "%version $(version)" >> ~/.rpmmacros
	
	cp -a . $(BUILD_DIR)/$(name_version)
	cp package/linux/suse/osra.spec $(BUILD_DIR)/SPECS
	
#	If you change the tarname here, change also "Source0" in package/linux/suse/osra.spec:
	TAR_NAME=$(BUILD_DIR)/SOURCES/$(name_version).tar.gz $(MAKE) -C $(BUILD_DIR)/$(name_version) tarball

	pushd $(BUILD_DIR)/SPECS; \
	rpmbuild -ba --target=$(TARGET_CPU) osra.spec; \
	exit_code=$$?; \
	popd; \
	exit $$exit_code;
	$(RM) -f ~/.rpmmacros 
	find $(BUILD_DIR)/RPMS  -iname '$(name)*.rpm'     -exec cp '{}' . \;
#	Rename to .srpm, because otherwise *.rpm mask does not match unique file:
	find $(BUILD_DIR)/SRPMS -iname '$(name)*.src.rpm' -exec cp '{}' $(name_version).srpm \;
	$(RM) -rf $(BUILD_DIR)

# General maven repository deployment rule. See package/hudson/pom.xml for more details. The 1st command in the rule can be parameterized, but the 2nd is tricky:
deploy_deb:
	mvn deploy:deploy-file -Durl=$(REPOSITORY_URL) -DrepositoryId=$(REPOSITORY_ID) -Dfile=`echo $(name)*.deb`    -DgroupId=net.sourceforge -DartifactId=$(name) -Dversion=$(version) -Dclassifier=$(TARGET_CPU) -Dpackaging=deb -DpomFile=package/maven/pom.xml
	mvn deploy:deploy-file -Durl=$(REPOSITORY_URL) -DrepositoryId=$(REPOSITORY_ID) -Dfile=`echo $(name)*.tar.gz` -DgroupId=net.sourceforge -DartifactId=$(name) -Dversion=$(version) -Dclassifier=sources       -Dpackaging=tgz

deploy_rpm:
	mvn deploy:deploy-file -Durl=$(REPOSITORY_URL) -DrepositoryId=$(REPOSITORY_ID) -Dfile=`echo $(name)*.rpm`    -DgroupId=net.sourceforge -DartifactId=$(name) -Dversion=$(version) -Dclassifier=$(TARGET_CPU) -Dpackaging=rpm -DpomFile=package/maven/pom.xml
	mvn deploy:deploy-file -Durl=$(REPOSITORY_URL) -DrepositoryId=$(REPOSITORY_ID) -Dfile=`echo $(name)*.srpm`   -DgroupId=net.sourceforge -DartifactId=$(name) -Dversion=$(version) -Dclassifier=sources       -Dpackaging=srpm

beautify:
	astyle --style=gnu --suffix=none --recursive "*.cpp" "*.h"

Makefile.inc: Makefile.inc.in config.status
	./config.status

config.status: configure
	echo "Your Makefile.inc is older than configure script. As this file is generated by configure, it is strongly advised to re-run configure to update it."
#	./configure

configure: configure.ac aclocal.m4
	echo "Your configure script is older than configure.ac. It is strongly advised to re-run autoconf to update it."
#	autoconf
